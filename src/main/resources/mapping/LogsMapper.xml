<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.LogsMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Logs" >
    <id column="log_id" property="logId" jdbcType="INTEGER" />
    <result column="log_operation" property="logOperation" jdbcType="VARCHAR" />
    <result column="log_method" property="logMethod" jdbcType="VARCHAR" />
    <result column="log_parm" property="logParm" jdbcType="VARCHAR" />
    <result column="log_time" property="logTime" jdbcType="TIMESTAMP" />
    <result column="log_user" property="logUser" jdbcType="VARCHAR" />
    <result column="log_ip" property="logIp" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    log_id, log_operation, log_method, log_parm, log_time, log_user, log_ip
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from logs
    where log_id = #{logId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from logs
    where log_id = #{logId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Logs" >
    insert into logs (log_id, log_operation, log_method, 
      log_parm, log_time, log_user, 
      log_ip)
    values (#{logId,jdbcType=INTEGER}, #{logOperation,jdbcType=VARCHAR}, #{logMethod,jdbcType=VARCHAR}, 
      #{logParm,jdbcType=VARCHAR}, #{logTime,jdbcType=TIMESTAMP}, #{logUser,jdbcType=VARCHAR}, 
      #{logIp,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Logs" >
    insert into logs
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        log_id,
      </if>
      <if test="logOperation != null" >
        log_operation,
      </if>
      <if test="logMethod != null" >
        log_method,
      </if>
      <if test="logParm != null" >
        log_parm,
      </if>
      <if test="logTime != null" >
        log_time,
      </if>
      <if test="logUser != null" >
        log_user,
      </if>
      <if test="logIp != null" >
        log_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        #{logId,jdbcType=INTEGER},
      </if>
      <if test="logOperation != null" >
        #{logOperation,jdbcType=VARCHAR},
      </if>
      <if test="logMethod != null" >
        #{logMethod,jdbcType=VARCHAR},
      </if>
      <if test="logParm != null" >
        #{logParm,jdbcType=VARCHAR},
      </if>
      <if test="logTime != null" >
        #{logTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logUser != null" >
        #{logUser,jdbcType=VARCHAR},
      </if>
      <if test="logIp != null" >
        #{logIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Logs" >
    update logs
    <set >
      <if test="logOperation != null" >
        log_operation = #{logOperation,jdbcType=VARCHAR},
      </if>
      <if test="logMethod != null" >
        log_method = #{logMethod,jdbcType=VARCHAR},
      </if>
      <if test="logParm != null" >
        log_parm = #{logParm,jdbcType=VARCHAR},
      </if>
      <if test="logTime != null" >
        log_time = #{logTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logUser != null" >
        log_user = #{logUser,jdbcType=VARCHAR},
      </if>
      <if test="logIp != null" >
        log_ip = #{logIp,jdbcType=VARCHAR},
      </if>
    </set>
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Logs" >
    update logs
    set log_operation = #{logOperation,jdbcType=VARCHAR},
      log_method = #{logMethod,jdbcType=VARCHAR},
      log_parm = #{logParm,jdbcType=VARCHAR},
      log_time = #{logTime,jdbcType=TIMESTAMP},
      log_user = #{logUser,jdbcType=VARCHAR},
      log_ip = #{logIp,jdbcType=VARCHAR}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
</mapper>